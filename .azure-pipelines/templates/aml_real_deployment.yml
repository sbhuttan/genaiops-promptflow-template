parameters:
- name: SUBSCRIPTION_ID
  type: string
- name: USE_CASE_BASE_PATH
  type: string
- name: MODEL_VERSION
  type: string
- name: DEPLOY_ENVIRONMENT
  type: string
- name: RESOURCE_GROUP_NAME
  type: string
- name: WORKSPACE_NAME
  type: string
- name: KEY_VAULT_NAME
  type: string
- name: ENV_VARS
  type: string

steps:
- template: execute_python_code.yml
  parameters:
    step_name: "Provision AzureML Endpoint"
    script_parameter: |
      python -m llmops.common.deployment.provision_endpoint \
        --subscription_id ${{ parameters.SUBSCRIPTION_ID }} \
        --build_id $(Build.Buildid) \
        --output_file "endpoint_principal.txt" \
        --env_name ${{ parameters.DEPLOY_ENVIRONMENT }} \
        --base_path ${{ parameters.USE_CASE_BASE_PATH }}


- task: AzureCLI@2
  displayName: Read Endpoint Principal
  name: read_endpoint_principal
  inputs:
    azureSubscription: $(AZURE_RM_SVC_CONNECTION)
    scriptType: bash
    scriptLocation: inlineScript
    workingDirectory: $(System.DefaultWorkingDirectory)
    inlineScript: |
      readarray arr <"endpoint_principal.txt"
      endpoint_principal=${arr[0]}
      echo $endpoint_principal
      echo "##vso[task.setvariable variable=ENDPOINT_PRINCIPAL;isOutput=true;]$endpoint_principal"
  
- task: AzureCLI@2
  displayName: Assign Permission to Endpoint Principal
  name: assign_endpoint_principal
  continueOnError: false
  env: {APPLICATIONINSIGHTS_CONNECTION_STRING: "$(APPLICATIONINSIGHTS-CONNECTION-STRING)"}
  inputs: 
    azureSubscription: $(AZURE_RM_SVC_CONNECTION)
    scriptType: bash
    workingDirectory: $(System.DefaultWorkingDirectory)
    scriptLocation: inlineScript
    inlineScript: |
      KEY_VAULT_NAME=${{ parameters.KEY_VAULT_NAME }}
      echo $KEY_VAULT_NAME

      RESOURCE_GROUP_NAME=${{ parameters.RESOURCE_GROUP_NAME }}
      echo $RESOURCE_GROUP_NAME

      WORKSPACE_NAME=${{ parameters.WORKSPACE_NAME }}
      echo $WORKSPACE_NAME

      echo "assigning permissions to Principal to AzureML workspace.."
      az role assignment create --assignee $(read_endpoint_principal.ENDPOINT_PRINCIPAL) --role "AzureML Data Scientist" --scope "/subscriptions/${{ parameters.SUBSCRIPTION_ID }}/resourcegroups/$RESOURCE_GROUP_NAME/providers/Microsoft.MachineLearningServices/workspaces/$WORKSPACE_NAME"
      
      echo "assigning permissions to Principal to Key vault.."
      auth_type=$(az keyvault show -n $KEY_VAULT_NAME  -g $RESOURCE_GROUP_NAME --query "properties.enableRbacAuthorization")
      if [[ "$auth_type" = true ]]; then
          echo "assigning RBAC permission"
          az role assignment create --assignee $(read_endpoint_principal.ENDPOINT_PRINCIPAL) --role "Key Vault Reader" --scope "/subscriptions/${{ parameters.SUBSCRIPTION_ID }}/resourcegroups/$RESOURCE_GROUP_NAME/providers/Microsoft.KeyVault/vaults/$KEY_VAULT_NAME"
      else
          echo "assigning policy permission"
          az keyvault set-policy --name $KEY_VAULT_NAME --resource-group $RESOURCE_GROUP_NAME --object-id $(read_endpoint_principal.ENDPOINT_PRINCIPAL) --secret-permissions get list
      fi

- template: execute_python_code.yml
  parameters:
    step_name: "Provision Deployment"
    script_parameter: |
      python -m llmops.common.deployment.provision_deployment \
        --subscription_id ${{ parameters.SUBSCRIPTION_ID }} \
        --model_version ${{ parameters.MODEL_VERSION }} \
        --build_id $(Build.Buildid) \
        --env_name ${{ parameters.DEPLOY_ENVIRONMENT }} \
        --base_path ${{ parameters.USE_CASE_BASE_PATH }}

- template: execute_python_code.yml
  parameters:
    step_name: "Test Endpoint"
    script_parameter: |
      python -m llmops.common.deployment.test_model_on_aml \
        --subscription_id ${{ parameters.SUBSCRIPTION_ID }} \
        --env_name ${{ parameters.DEPLOY_ENVIRONMENT }} \
        --base_path ${{ parameters.USE_CASE_BASE_PATH }}








